{
  "$defs": {
    "ActionDetails": {
      "properties": {
        "webhook": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebhookAction"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The webhook action to be performed."
        },
        "keyboard": {
          "anyOf": [
            {
              "$ref": "#/$defs/Keyboard"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key press action to be performed."
        },
        "mouse": {
          "anyOf": [
            {
              "$ref": "#/$defs/Mouse"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mouse action to be performed."
        },
        "teams_reaction": {
          "anyOf": [
            {
              "$ref": "#/$defs/TeamsReact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Teams reaction to be performed."
        },
        "meeting_action": {
          "anyOf": [
            {
              "$ref": "#/$defs/MeetingAction"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The meeting action to be performed."
        },
        "activate_teams": {
          "default": false,
          "description": "Flag to activate Teams.",
          "title": "Activate Teams",
          "type": "boolean"
        },
        "command": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The command to be executed.",
          "title": "Command"
        }
      },
      "title": "ActionDetails",
      "type": "object"
    },
    "ButtonAction": {
      "properties": {
        "button_id": {
          "description": "The ID of the button, must be between 1 and 10 inclusive.",
          "maximum": 10,
          "minimum": 1,
          "title": "Button Id",
          "type": "integer"
        },
        "actions": {
          "description": "The actions to be performed when the button is pressed.",
          "items": {
            "$ref": "#/$defs/ActionDetails"
          },
          "title": "Actions",
          "type": "array"
        }
      },
      "required": [
        "button_id"
      ],
      "title": "ButtonAction",
      "type": "object"
    },
    "ClientMessageParameterType": {
      "description": "Types of reactions for client messages.",
      "enum": [
        "applause",
        "laugh",
        "like",
        "love",
        "wow",
        "chat",
        "sharing-tray"
      ],
      "title": "ClientMessageParameterType",
      "type": "string"
    },
    "DeviceInfo": {
      "properties": {
        "vendor_id": {
          "anyOf": [
            {
              "exclusiveMaximum": 16777216,
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The vendor ID of the device.",
          "title": "Vendor Id"
        },
        "product_id": {
          "anyOf": [
            {
              "exclusiveMaximum": 65536,
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The product ID of the device.",
          "title": "Product Id"
        },
        "serial_number": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The serial number of the device.",
          "title": "Serial Number"
        }
      },
      "title": "DeviceInfo",
      "type": "object"
    },
    "Key": {
      "properties": {
        "key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key to be pressed. This field has precedence over 'string'.",
          "title": "Key"
        }
      },
      "title": "Key",
      "type": "object"
    },
    "KeyTap": {
      "properties": {
        "key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key to be pressed. This field has precedence over 'string'.",
          "title": "Key"
        },
        "modifiers": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of modifier keys to be held down during the key press.",
          "title": "Modifiers"
        }
      },
      "title": "KeyTap",
      "type": "object"
    },
    "KeyType": {
      "properties": {
        "string": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The string to be typed. This field is only used if 'key' is not set.",
          "title": "String"
        }
      },
      "title": "KeyType",
      "type": "object"
    },
    "Keyboard": {
      "properties": {
        "press": {
          "anyOf": [
            {
              "$ref": "#/$defs/Key"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key press action to be performed. This will hold down the key until released."
        },
        "release": {
          "anyOf": [
            {
              "$ref": "#/$defs/Key"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key release action to be performed. This will release the key."
        },
        "tap": {
          "anyOf": [
            {
              "$ref": "#/$defs/KeyTap"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key tap action to be performed. This will press and release the key."
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/KeyType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key type action to be performed. This will type the string."
        }
      },
      "title": "Keyboard",
      "type": "object"
    },
    "LedColor": {
      "enum": [
        "red",
        "green",
        "blue",
        "white",
        "black",
        "yellow",
        "cyan",
        "magenta",
        "orange",
        "purple"
      ],
      "title": "LedColor",
      "type": "string"
    },
    "LedStatus": {
      "properties": {
        "button_id": {
          "description": "The ID of the button, must be between 1 and 10.",
          "maximum": 10,
          "minimum": 1,
          "title": "Button Id",
          "type": "integer"
        },
        "teams_state": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedStatusTeamsState"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Teams state to be used for the LED status."
        },
        "result_command": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedStatusResultCommand"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The command to be used for the LED status. (on/off)"
        },
        "color_command": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedStatusColorCommand"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The command to be used for the LED status. (color)"
        },
        "webhook": {
          "default": false,
          "description": "Flag to enable the color via webhook.",
          "title": "Webhook",
          "type": "boolean"
        }
      },
      "required": [
        "button_id"
      ],
      "title": "LedStatus",
      "type": "object"
    },
    "LedStatusColorCommand": {
      "properties": {
        "command": {
          "description": "The command to be executed. It must output a color name.",
          "title": "Command",
          "type": "string"
        },
        "interval": {
          "default": 5.0,
          "description": "The interval to run the command in, default is 5.0 seconds.",
          "title": "Interval",
          "type": "number"
        },
        "timeout": {
          "default": 0.5,
          "description": "Maximum allowed runtime for the command, color will be set to 'black' if timeout occurs, default is 0.5 seconds.",
          "title": "Timeout",
          "type": "number"
        }
      },
      "required": [
        "command"
      ],
      "title": "LedStatusColorCommand",
      "type": "object"
    },
    "LedStatusResultCommand": {
      "properties": {
        "color_on": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedColor"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The color of the LED when result is `0` or the value is true"
        },
        "color_off": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedColor"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The color of the LED when result is not `0` or the value is false."
        },
        "command": {
          "description": "The command to be executed. It must output a color name.",
          "title": "Command",
          "type": "string"
        },
        "interval": {
          "default": 5.0,
          "description": "The interval to run the command in, default is 5.0 seconds.",
          "title": "Interval",
          "type": "number"
        },
        "timeout": {
          "default": 0.5,
          "description": "Maximum allowed runtime for the command, color will be set to 'black' if timeout occurs, default is 0.5 seconds.",
          "title": "Timeout",
          "type": "number"
        }
      },
      "required": [
        "command"
      ],
      "title": "LedStatusResultCommand",
      "type": "object"
    },
    "LedStatusTeamsState": {
      "properties": {
        "color_on": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedColor"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The color of the LED when result is `0` or the value is true"
        },
        "color_off": {
          "anyOf": [
            {
              "$ref": "#/$defs/LedColor"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The color of the LED when result is not `0` or the value is false."
        },
        "teams_state": {
          "$ref": "#/$defs/TeamsState",
          "description": "The Teams state to be used for the LED status."
        }
      },
      "required": [
        "teams_state"
      ],
      "title": "LedStatusTeamsState",
      "type": "object"
    },
    "LogLevel": {
      "enum": [
        "debug",
        "info",
        "warning",
        "error",
        "critical"
      ],
      "title": "LogLevel",
      "type": "string"
    },
    "LoggingConfig": {
      "properties": {
        "level": {
          "$ref": "#/$defs/LogLevel",
          "default": "info",
          "description": "The logging level for the application."
        },
        "submodules": {
          "description": "List of submodules to apply specific logging configurations.",
          "items": {
            "type": "string"
          },
          "title": "Submodules",
          "type": "array"
        },
        "file_enabled": {
          "default": true,
          "description": "Flag to enable or disable logging to a file.",
          "title": "File Enabled",
          "type": "boolean"
        },
        "file_path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The file path for the log file.",
          "title": "File Path"
        },
        "file_level": {
          "$ref": "#/$defs/LogLevel",
          "default": "info",
          "description": "The logging level for the log file."
        },
        "file_max_size": {
          "default": 3145728,
          "description": "The maximum size of the log file in bytes before it is rotated.",
          "title": "File Max Size",
          "type": "integer"
        },
        "file_backup_count": {
          "default": 5,
          "description": "The number of backup log files to keep.",
          "title": "File Backup Count",
          "type": "integer"
        },
        "console_enabled": {
          "default": false,
          "description": "Flag to enable or disable logging to the console.",
          "title": "Console Enabled",
          "type": "boolean"
        },
        "console_level": {
          "$ref": "#/$defs/LogLevel",
          "default": "info",
          "description": "The logging level for the console output."
        }
      },
      "title": "LoggingConfig",
      "type": "object"
    },
    "MeetingAction": {
      "enum": [
        "none",
        "query-state",
        "mute",
        "unmute",
        "toggle-mute",
        "hide-video",
        "show-video",
        "toggle-video",
        "unblur-background",
        "blur-background",
        "toggle-background-blur",
        "lower-hand",
        "raise-hand",
        "toggle-hand",
        "leave-call",
        "send-reaction",
        "toggle-ui",
        "stop-sharing"
      ],
      "title": "MeetingAction",
      "type": "string"
    },
    "Mouse": {
      "properties": {
        "move": {
          "anyOf": [
            {
              "$ref": "#/$defs/MousePosition"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mouse move action to be performed."
        },
        "set": {
          "anyOf": [
            {
              "$ref": "#/$defs/MousePosition"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mouse set position action to be performed."
        },
        "click": {
          "anyOf": [
            {
              "$ref": "#/$defs/MouseButton"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mouse click action to be performed."
        },
        "press": {
          "anyOf": [
            {
              "$ref": "#/$defs/MouseButton"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mouse press action to be performed."
        },
        "release": {
          "anyOf": [
            {
              "$ref": "#/$defs/MouseButton"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mouse release action to be performed."
        }
      },
      "title": "Mouse",
      "type": "object"
    },
    "MouseButton": {
      "properties": {
        "button": {
          "description": "The mouse button to be clicked.",
          "title": "Button",
          "type": "string"
        }
      },
      "required": [
        "button"
      ],
      "title": "MouseButton",
      "type": "object"
    },
    "MousePosition": {
      "properties": {
        "x": {
          "description": "The x-coordinate of the mouse action position.",
          "title": "X",
          "type": "integer"
        },
        "y": {
          "description": "The y-coordinate of the mouse action position.",
          "title": "Y",
          "type": "integer"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "title": "MousePosition",
      "type": "object"
    },
    "TeamsReact": {
      "properties": {
        "reaction": {
          "$ref": "#/$defs/ClientMessageParameterType",
          "description": "The type of client message parameter for the reaction."
        }
      },
      "required": [
        "reaction"
      ],
      "title": "TeamsReact",
      "type": "object"
    },
    "TeamsState": {
      "enum": [
        "is-muted",
        "is-hand-raised",
        "is-in-meeting",
        "is-recording-on",
        "is-background-blurred",
        "is-sharing",
        "has-unread-messages",
        "is-video-on"
      ],
      "title": "TeamsState",
      "type": "string"
    },
    "VirtualKeypadConfig": {
      "properties": {
        "bind_address": {
          "default": "127.0.0.1",
          "description": "The IP address to bind the virtual keypad server to. Defaults to '127.0.0.1'.",
          "title": "Bind Address",
          "type": "string"
        },
        "bind_port": {
          "default": 12909,
          "description": "The port number to bind the virtual keypad server to. Defaults to 12909.",
          "maximum": 65535,
          "minimum": 1024,
          "title": "Bind Port",
          "type": "integer"
        }
      },
      "title": "VirtualKeypadConfig",
      "type": "object"
    },
    "WebhookAction": {
      "properties": {
        "method": {
          "default": "GET",
          "description": "The HTTP method to use for the webhook action.",
          "title": "Method",
          "type": "string"
        },
        "url": {
          "description": "The URL to send the webhook request to.",
          "title": "Url",
          "type": "string"
        },
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "description": "Optional headers to include in the webhook request.",
          "title": "Headers",
          "type": "object"
        },
        "data": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional data to include in the webhook request.",
          "title": "Data"
        }
      },
      "required": [
        "url"
      ],
      "title": "WebhookAction",
      "type": "object"
    }
  },
  "properties": {
    "actions": {
      "default": [
        {
          "button_id": 1,
          "actions": []
        },
        {
          "button_id": 2,
          "actions": []
        },
        {
          "button_id": 3,
          "actions": []
        },
        {
          "button_id": 4,
          "actions": []
        },
        {
          "button_id": 5,
          "actions": []
        },
        {
          "button_id": 6,
          "actions": []
        },
        {
          "button_id": 7,
          "actions": []
        },
        {
          "button_id": 8,
          "actions": []
        },
        {
          "button_id": 9,
          "actions": []
        },
        {
          "button_id": 10,
          "actions": []
        }
      ],
      "items": {
        "$ref": "#/$defs/ButtonAction"
      },
      "title": "Actions",
      "type": "array"
    },
    "longpress_action": {
      "items": {
        "$ref": "#/$defs/ButtonAction"
      },
      "title": "Longpress Action",
      "type": "array"
    },
    "leds": {
      "default": [
        {
          "button_id": 1,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 2,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 3,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 4,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 5,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 6,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 7,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 8,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 9,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        },
        {
          "button_id": 10,
          "teams_state": null,
          "result_command": null,
          "color_command": null,
          "webhook": false
        }
      ],
      "items": {
        "$ref": "#/$defs/LedStatus"
      },
      "title": "Leds",
      "type": "array"
    },
    "teams_token": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Teams Token"
    },
    "file_path": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "File Path"
    },
    "virtual_keypad": {
      "$ref": "#/$defs/VirtualKeypadConfig",
      "default": {
        "bind_address": "127.0.0.1",
        "bind_port": 12909
      }
    },
    "auto_update": {
      "default": true,
      "title": "Auto Update",
      "type": "boolean"
    },
    "device_identifications": {
      "default": [
        {
          "vendor_id": 7504,
          "product_id": 24969,
          "serial_number": null
        },
        {
          "vendor_id": 7504,
          "product_id": 24774,
          "serial_number": null
        },
        {
          "vendor_id": 4617,
          "product_id": 1,
          "serial_number": null
        }
      ],
      "items": {
        "$ref": "#/$defs/DeviceInfo"
      },
      "title": "Device Identifications",
      "type": "array"
    },
    "logging": {
      "$ref": "#/$defs/LoggingConfig",
      "default": {
        "level": "info",
        "submodules": [],
        "file_enabled": true,
        "file_path": null,
        "file_level": "info",
        "file_max_size": 3145728,
        "file_backup_count": 5,
        "console_enabled": false,
        "console_level": "info"
      }
    },
    "proxy": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Proxy"
    }
  },
  "title": "Config",
  "type": "object"
}
